package com.cdac.acts.tester;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.cdac.acts.book.Book;
import com.cdac.acts.enums.BookTypeEnum;
import com.cdac.acts.util.DataEntry;

public class BookTest {

	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		List<Book> books =new ArrayList<Book>();
		String filePath = "./book.dat";
		File file = new File(filePath);
		if(file.isFile()) {
			try (DataInputStream dis = new DataInputStream(new BufferedInputStream(new FileInputStream(filePath)))) {
				while(true) {
					
					try {
						String title = dis.readUTF();
						BookTypeEnum type = BookTypeEnum.valueOf(dis.readUTF());
						Double price = dis.readDouble();
						LocalDate publishDate = LocalDate.parse(dis.readUTF());
						String authorName = dis.readUTF();
						Integer qty = dis.readInt();
						
						Book b = new Book(title, type, price, publishDate, authorName, qty);
						books.add(b);
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
			}
			
		}else {
			books = DataEntry.bookList();
			System.out.println("Take Data");
		}
		int op;
		do {
			try(Scanner sc = new Scanner(System.in)){
				op = sc.nextInt();
				switch(op) {
					case 1: {
						for(Book b : books) {
							System.out.println(b);
						}
						break;
					}
					case 0: break;
					default: System.out.println("INVALID INPUT");
				}
			}
		}while(op!=0);
		System.out.println("hiiiijojso");
		try (DataOutputStream dos = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(filePath)))) {
			for(Book b : books) {
				dos.writeUTF(b.getTitle());
				dos.writeUTF(b.getType().toString());
				dos.writeUTF(b.getPrice().toString());
				dos.writeUTF(b.getPublishDate().toString());
				dos.writeUTF(b.getAuthorName());
				dos.writeUTF(b.getQty().toString());
			}
		}
	}

}
