package com.cdac.acts.tester;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import com.cdac.acts.book.Book;
import com.cdac.acts.enums.BookTypeEnum;
import com.cdac.acts.util.DataEntry;

public class PrinterTest {

	public static void main(String[] args) {
		Map<Integer,Book> books =new HashMap<>();
		String filePath = "./book.dat";
		
		try(Scanner sc = new Scanner(System.in)){
			
			File file = new File(filePath);
			if(file.isFile()) {
				addBookFromFile(books, filePath);
			}else {
				books = DataEntry.bookList();
				System.out.println("Take InPut From DataUtil");
			}
			int op;
			do {
					System.out.println("\nOPTIONS :- \n");
					System.out.println("1. Display All the Books.");
					System.out.println("2. Add Book to List.");
					System.out.println("3. Search Book by Title.");
					System.out.println("4. Remove Book from List.");
					System.out.println("0. EXIT and Save BookList to File.");
					System.out.print("\nEnter your choice: ");
					op = sc.nextInt();
					switch(op) {
						case 1: {
							System.out.println("Display All books :-");
							for(Book b : books) {
								System.out.println(b);
							}
							break;
						}
						case 2: {
							addBookToList(books, sc);
							break;
						}
						case 3: {
							System.out.println("Searching Book by Title");
							System.out.print("Enter Title of Book : ");
							sc.nextLine();
							String title = sc.nextLine();
							Book r = null;
							for(Book b : books) {
								if(b.getTitle().equals(title)) {
									r = b;
								}
							}
							if(r!=null) {
								System.out.println(r);
							}
							else {
								System.out.println("NO BOOK Found by title : " + title);
							}
							break;
						}
						case 4: {
							System.out.println("Remove Book by Title");
							System.out.print("Enter Title of Book : ");
							sc.nextLine();
							String title = sc.nextLine();
							Book r = null;
							for(Book b : books) {
								if(b.getTitle().equals(title)) {
									r = b;
								}
							}
							if(r!=null) {
								System.out.println("Book is Removed : " + r);
								books.remove(r);
							}
							else {
								System.out.println("NO BOOK Found by title : " + title);
							}
							break;
						}
						case 0: break;
						default: System.out.println("INVALID INPUT");
					}
				
			}while(op!=0);
		}
		addBookToFile(books, filePath);
	}

	private static void addBookToList(List<Book> books, Scanner sc) {
		System.out.println("Add A Book :- \n");
		System.out.print("Enter Title of Book : ");
		sc.nextLine();
		String title = sc.nextLine();
		System.out.print("Enter Type of Book : ");
		String strtype = sc.next();
		BookTypeEnum type = BookTypeEnum.valueOf(strtype);
		System.out.print("Enter Price Of Book : ");
		Double price = sc.nextDouble();
		System.out.print("Enter Publish Date in Formate yyyy-mm-dd : ");
		String strdate = sc.next();
		LocalDate pubDate = LocalDate.parse(strdate);
		System.out.print("Enter Author Name : ");
		sc.nextLine();
		String name = sc.nextLine();
		System.out.print("Enter Quantity of Book : ");
		Integer qty = sc.nextInt();
		
		books.add(new Book(title, type, price, pubDate, name, qty));
	}

	private static void addBookToFile(Map<Integer,Book> books, String filePath) throws IOException, FileNotFoundException {
		try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(filePath))) {
			for(Map.entry e : books) {
				oos.writeObject(b);
			}
			System.out.println("Date Stored into File");
		}
	}

	private static void addBookFromFile(Map<Integer,Book> books, String filePath) throws IOException, FileNotFoundException {
		try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(filePath))) {
			try{
					while(true) {
						Book b = (Book)ois.readObject();
						books.add(b);
					}
			}catch(Exception e) {
				System.out.println("File read Complete");
			}
		}
	}

}